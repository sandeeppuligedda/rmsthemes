var mod_pagespeed_LWukmebcVX = "/**\n * CircleAudioPlayer\n *\n * A minimalist audio player represented by a single button in a circle which\n * fills clockwise as the audio file progresses.\n *\n * Isolated to have no requirements.\n *\n * @param {object} options\n *   @prop {string} audio\n *   @prop {string} borderColor\n *   @prop {string} playedColor\n *   @prop {string} backgroundColor\n *   @prop {string} iconColor\n *   @prop {number} borderWidth\n *   @prop {number} size\n *   @prop {string} className - class to add to the canvas element\n *\n * @method {void} addEventListener (planned, not implemented)\n *   forwards to the canvas' addEventListener or the audio element's\n *   addEventListener, depending on whether or not the event string matches a\n *   media event\n *\n * @method {void} setAudio\n *   @param {string} audioUrl\n * @method {void} setSize\n *   @param {number} size\n * @method {void} appendTo\n *   @param {DOMElement} element\n * @method {void} play\n * @method {void} pause\n * @method {void} draw - force a redraw\n */\n// requirements\n\n// settings\nvar DEFAULTS = {\n	borderColor: \"#e3207b\",\n	playedColor: \"#fff\",\n	backgroundColor: \"rgba(255,255,255,0)\",\n	iconColor: \"#e3207b\",\n	borderWidth: 2,\n	size: 18,\n	className: 'circle-audio-player'\n};\n\n// reused values\nvar pi = Math.PI;\nvar doublePi = pi * 2;\nvar arcOffset = -pi / 2;\nvar animTime = 200;\nvar loaderTime = 1800;\n\nvar CircleAudioPlayer = function (options) {\n	options = options || {};\n	for (var property in DEFAULTS) {\n		this[property] = options[property] || DEFAULTS[property];\n	}\n\n	// create some things we need\n	this._canvas = document.createElement('canvas');\n	this._canvas.setAttribute('class', this.className + ' is-loading');\n	this._canvas.addEventListener('mousedown', (function () {\n		if (this.playing) {\n			this.pause();\n		}\n		else {\n			this.play();\n		}\n	}).bind(this));\n	this._ctx = this._canvas.getContext('2d');\n\n	// set up initial stuff\n	this.setAudio(options.audio);\n	this.setSize(this.size);\n\n	// redraw loop\n	(function cAPAnimationLoop (now) {\n		// check if we need to update anything\n		if (this.animating) {\n			this._updateAnimations(now);\n		}\n		if (this._forceDraw || this.playing || this.animating || this.loading) {\n			this._draw();\n			this._forceDraw = false;\n		}\n\n		requestAnimationFrame(cAPAnimationLoop.bind(this));\n	}).call(this, new Date().getTime());\n};\nCircleAudioPlayer.prototype = {\n	// private methods\n	_animateIcon: function (to, from) {\n		// define a few things the first time\n		this._animationProps = {\n			animStart: null,\n			from: from,\n			to: to\n		};\n		if (from) {\n			this.animating = true;\n		}\n		else {\n			this._animationProps.current = this._icons[to].slice();\n			this.draw();\n		}\n	},\n	_updateAnimations: function (now) {\n		this._animationProps.animStart = this._animationProps.animStart || now;\n		var deltaTime = now - this._animationProps.animStart;\n		var perc = (1 - Math.cos(deltaTime / animTime * pi / 2));\n		if (deltaTime >= animTime) {\n			this.animating = false;\n			perc = 1;\n			this._animationProps.current = this._icons[this._animationProps.to].slice();\n			this.draw();\n		}\n		else {\n			var from = this._icons[this._animationProps.from];\n			var current = [];\n			for (var i = 0; i < from.length; i++) {\n				current.push([]);\n				for (var j = 0; j < from[i].length; j++) {\n					current[i].push([]);\n					var to = this._icons[this._animationProps.to][i][j];\n					current[i][j][0] = from[i][j][0] + (to[0] - from[i][j][0]) * perc;\n					current[i][j][1] = from[i][j][1] + (to[1] - from[i][j][1]) * perc;\n				}\n			}\n			this._animationProps.current = current;\n		}\n	},\n	_draw: function (progress) {\n		// common settings\n		if (isNaN(progress)) {\n			progress = this.audio.currentTime / this.audio.duration || 0;\n		}\n\n		// clear existing\n		this._ctx.clearRect(0, 0, this.size, this.size);\n\n		// draw bg\n		this._ctx.beginPath();\n		this._ctx.arc(this._halfSize, this._halfSize, this._halfSize - (this.borderWidth / 2), 0, doublePi);\n		this._ctx.closePath();\n		this._ctx.fillStyle = this.backgroundColor;\n		this._ctx.fill();\n\n		// draw border\n		// our active path is already the full circle, so just stroke it\n		this._ctx.lineWidth = this.borderWidth;\n		this._ctx.strokeStyle = this.borderColor;\n		this._ctx.stroke();\n\n		// play progress\n		if (progress > 0) {\n			this._ctx.beginPath();\n			this._ctx.arc(this._halfSize, this._halfSize, this._halfSize - (this.borderWidth / 2), arcOffset, arcOffset + doublePi * progress);\n			this._ctx.strokeStyle = this.playedColor;\n			this._ctx.stroke();\n		}\n\n		// icons\n		this._ctx.fillStyle = this.iconColor;\n		if (this.loading) {\n			var loaderOffset = -Math.cos((new Date().getTime() % (loaderTime)) / (loaderTime) * pi) * doublePi - (pi / 3) - (pi / 2);\n			this._ctx.beginPath();\n			this._ctx.arc(this._halfSize, this._halfSize, this._halfSize / 3, loaderOffset, loaderOffset + pi / 3 * 2);\n			this._ctx.strokeStyle = this.iconColor;\n			this._ctx.stroke();\n		}\n		else {\n			this._ctx.beginPath();\n			var icon = (this._animationProps && this._animationProps.current) || this._icons.play;\n			for (var i = 0; i < icon.length; i++) {\n				this._ctx.moveTo(icon[i][0][0], icon[i][0][1]);\n\n				for (var j = 1; j < icon[i].length; j++) {\n					this._ctx.lineTo(icon[i][j][0], icon[i][j][1]);\n				}\n			}\n\n			// this._ctx.closePath();\n			this._ctx.fill();\n			// stroke to fill in for retina\n			this._ctx.strokeStyle = this.iconColor;\n			this._ctx.lineWidth = 2;\n			this._ctx.lineJoin = 'miter';\n			this._ctx.stroke();\n		}\n	},\n	_setState: function (state) {\n		this.playing = false;\n		this.loading = false;\n		if (state === 'playing') {\n			this.playing = true;\n			this._animateIcon('pause', 'play');\n		}\n		else if (state === 'loading') {\n			this.loading = true;\n		}\n		else if (this.state !== 'loading') {\n			this._animateIcon('play', 'pause');\n		}\n		else {\n			this._animateIcon('play', null);\n		}\n		this.state = state;\n		this._canvas.setAttribute('class', this.className + ' is-' + state);\n		this.draw();\n	},\n	// public methods\n	draw: function () {\n		this._forceDraw = true;\n	},\n	setSize: function (size) {\n		this.size = size;\n		this._halfSize = size / 2; // we do this a lot. it's not heavy, but why repeat?\n		this._canvas.width = size;\n		this._canvas.height = size;\n		// set icon paths\n		var iconSize = this.size / 2;\n		var pauseGap = iconSize / 10;\n		var playLeft = Math.cos(pi / 3 * 2) * (iconSize / 2) + this._halfSize;\n		var playRight = iconSize / 2 + this._halfSize;\n		var playHalf = (playRight - playLeft) / 2 + playLeft;\n		var top = this._halfSize - Math.sin(pi / 3 * 2) * (iconSize / 2);\n		var bottom = this.size - top;\n		var pauseLeft = this._halfSize - iconSize / 3;\n		var pauseRight = this.size - pauseLeft;\n		this._icons = {\n			play: [\n				[\n					[playLeft, top],\n					[playHalf, (this._halfSize - top) / 2 + top],\n					[playHalf, (this._halfSize - top) / 2 + this._halfSize],\n					[playLeft, bottom]\n				],\n				[\n					[playHalf, (this._halfSize - top) / 2 + top],\n					[playRight, this._halfSize],\n					[playRight, this._halfSize],\n					[playHalf, (this._halfSize - top) / 2 + this._halfSize]\n				]\n			],\n			pause: [\n				[\n					[pauseLeft, top + pauseGap],\n					[this._halfSize - pauseGap, top + pauseGap],\n					[this._halfSize - pauseGap, bottom - pauseGap],\n					[pauseLeft, bottom - pauseGap]\n				],\n				[\n					[this._halfSize + pauseGap, top + pauseGap],\n					[pauseRight, top + pauseGap],\n					[pauseRight, bottom - pauseGap],\n					[this._halfSize + pauseGap, bottom - pauseGap]\n				]\n			]\n		};\n\n		if (this._animationProps && this._animationProps.current) {\n			this._animateIcon(this._animationProps.to);\n		}\n		if (!this.playing) {\n			this.draw();\n		}\n	},\n	setAudio: function (audioUrl) {\n		this.audio = new Audio(audioUrl);\n		this._setState('loading');\n\n		this.audio.addEventListener('canplaythrough', (function () {\n			this._setState('paused');\n		}).bind(this));\n		this.audio.addEventListener('play', (function () {\n			this._setState('playing');\n		}).bind(this));\n		this.audio.addEventListener('pause', (function () {\n			// reset when finished\n			if (this.audio.currentTime === this.audio.duration) {\n				this.audio.currentTime = 0;\n			}\n			this._setState('paused');\n		}).bind(this));\n	},\n	appendTo: function (element) {\n		element.appendChild(this._canvas);\n	},\n	play: function () {\n		this.audio.play();\n	},\n	pause: function () {\n		this.audio.pause();\n	}\n};\n\n\n// now init one as an example\nvar cap = new CircleAudioPlayer({\n	audio: 'http://www.largesound.com/ashborytour/sound/AshboryBYU.mp3',\n  size: 120,\n  borderWidth: 4\n});\ncap.appendTo(playerContainer);";
var mod_pagespeed__ZSvKxPadb = " AOS.init({\n 	duration: 800,\n 	easing: 'slide',\n 	once: true\n });\n\njQuery(document).ready(function($) {\n\n	\"use strict\";\n\n	\n\n	var siteMenuClone = function() {\n\n		$('.js-clone-nav').each(function() {\n			var $this = $(this);\n			$this.clone().attr('class', 'site-nav-wrap').appendTo('.site-mobile-menu-body');\n		});\n\n\n		setTimeout(function() {\n			\n			var counter = 0;\n      $('.site-mobile-menu .has-children').each(function(){\n        var $this = $(this);\n        \n        $this.prepend('<span class=\"arrow-collapse collapsed\">');\n\n        $this.find('.arrow-collapse').attr({\n          'data-toggle' : 'collapse',\n          'data-target' : '#collapseItem' + counter,\n        });\n\n        $this.find('> ul').attr({\n          'class' : 'collapse',\n          'id' : 'collapseItem' + counter,\n        });\n\n        counter++;\n\n      });\n\n    }, 1000);\n\n		$('body').on('click', '.arrow-collapse', function(e) {\n      var $this = $(this);\n      if ( $this.closest('li').find('.collapse').hasClass('show') ) {\n        $this.removeClass('active');\n      } else {\n        $this.addClass('active');\n      }\n      e.preventDefault();  \n      \n    });\n\n		$(window).resize(function() {\n			var $this = $(this),\n				w = $this.width();\n\n			if ( w > 768 ) {\n				if ( $('body').hasClass('offcanvas-menu') ) {\n					$('body').removeClass('offcanvas-menu');\n				}\n			}\n		})\n\n		$('body').on('click', '.js-menu-toggle', function(e) {\n			var $this = $(this);\n			e.preventDefault();\n\n			if ( $('body').hasClass('offcanvas-menu') ) {\n				$('body').removeClass('offcanvas-menu');\n				$this.removeClass('active');\n			} else {\n				$('body').addClass('offcanvas-menu');\n				$this.addClass('active');\n			}\n		}) \n\n		// click outisde offcanvas\n		$(document).mouseup(function(e) {\n	    var container = $(\".site-mobile-menu\");\n	    if (!container.is(e.target) && container.has(e.target).length === 0) {\n	      if ( $('body').hasClass('offcanvas-menu') ) {\n					$('body').removeClass('offcanvas-menu');\n				}\n	    }\n		});\n	}; \n	siteMenuClone();\n\n\n	var sitePlusMinus = function() {\n		$('.js-btn-minus').on('click', function(e){\n			e.preventDefault();\n			if ( $(this).closest('.input-group').find('.form-control').val() != 0  ) {\n				$(this).closest('.input-group').find('.form-control').val(parseInt($(this).closest('.input-group').find('.form-control').val()) - 1);\n			} else {\n				$(this).closest('.input-group').find('.form-control').val(parseInt(0));\n			}\n		});\n		$('.js-btn-plus').on('click', function(e){\n			e.preventDefault();\n			$(this).closest('.input-group').find('.form-control').val(parseInt($(this).closest('.input-group').find('.form-control').val()) + 1);\n		});\n	};\n	// sitePlusMinus();\n\n\n	var siteSliderRange = function() {\n    $( \"#slider-range\" ).slider({\n      range: true,\n      min: 0,\n      max: 500,\n      values: [ 75, 300 ],\n      slide: function( event, ui ) {\n        $( \"#amount\" ).val( \"$\" + ui.values[ 0 ] + \" - $\" + ui.values[ 1 ] );\n      }\n    });\n    $( \"#amount\" ).val( \"$\" + $( \"#slider-range\" ).slider( \"values\", 0 ) +\n      \" - $\" + $( \"#slider-range\" ).slider( \"values\", 1 ) );\n	};\n	// siteSliderRange();\n\n\n	var siteMagnificPopup = function() {\n		$('.image-popup').magnificPopup({\n	    type: 'image',\n	    closeOnContentClick: true,\n	    closeBtnInside: false,\n	    fixedContentPos: true,\n	    mainClass: 'mfp-no-margins mfp-with-zoom', // class to remove default margin from left and right side\n	     gallery: {\n	      enabled: true,\n	      navigateByImgClick: true,\n	      preload: [0,1] // Will preload 0 - before current, and 1 after the current image\n	    },\n	    image: {\n	      verticalFit: true\n	    },\n	    zoom: {\n	      enabled: true,\n	      duration: 300 // don't foget to change the duration also in CSS\n	    }\n	  });\n\n	  $('.popup-youtube, .popup-vimeo, .popup-gmaps').magnificPopup({\n	    disableOn: 700,\n	    type: 'iframe',\n	    mainClass: 'mfp-fade',\n	    removalDelay: 160,\n	    preloader: false,\n\n	    fixedContentPos: false\n	  });\n	};\n	siteMagnificPopup();\n\n\n	var siteCarousel = function () {\n		if ( $('.nonloop-block-13').length > 0 ) {\n			$('.nonloop-block-13').owlCarousel({\n		    center: false,\n		    items: 1,\n		    loop: true,\n				stagePadding: 0,\n				autoplay: true,\n		    margin: 20,\n		    nav: false,\n		    dots: true,\n				navText: ['<span class=\"icon-arrow_back\">', '<span class=\"icon-arrow_forward\">'],\n		    responsive:{\n	        600:{\n	        	margin: 20,\n	        	stagePadding: 0,\n	          items: 1\n	        },\n	        1000:{\n	        	margin: 20,\n	        	stagePadding: 0,\n	          items: 2\n	        },\n	        1200:{\n	        	margin: 20,\n	        	stagePadding: 0,\n	          items: 3\n	        }\n		    }\n			});\n		}\n\n		if ( $('.slide-one-item').length > 0 ) {\n			$('.slide-one-item').owlCarousel({\n		    center: false,\n		    items: 1,\n		    loop: true,\n				stagePadding: 0,\n		    margin: 0,\n		    autoplay: true,\n		    pauseOnHover: false,\n		    nav: true,\n		    animateOut: 'fadeOut',\n		    animateIn: 'fadeIn',\n		    navText: ['<span class=\"icon-arrow_back\">', '<span class=\"icon-arrow_forward\">']\n		  });\n	  }\n\n\n	  if ( $('.nonloop-block-4').length > 0 ) {\n		  $('.nonloop-block-4').owlCarousel({\n		    center: true,\n		    items:1,\n		    loop:false,\n		    margin:10,\n		    nav: true,\n				navText: ['<span class=\"icon-arrow_back\">', '<span class=\"icon-arrow_forward\">'],\n		    responsive:{\n	        600:{\n	          items:1\n	        }\n		    }\n			});\n		}\n\n	};\n	siteCarousel();\n\n	var siteStellar = function() {\n		$(window).stellar({\n	    responsive: true,\n	    parallaxBackgrounds: true,\n	    parallaxElements: true,\n	    horizontalScrolling: false,\n	    hideDistantElements: false,\n	    scrollProperty: 'scroll'\n	  });\n	};\n	siteStellar();\n\n	var siteCountDown = function() {\n\n		if ( $('#date-countdown').length > 0 ) {\n			$('#date-countdown').countdown('2020/10/10', function(event) {\n			  var $this = $(this).html(event.strftime(''\n			    + '<span class=\"countdown-block\"><span class=\"label\">%w</span> weeks </span>'\n			    + '<span class=\"countdown-block\"><span class=\"label\">%d</span> days </span>'\n			    + '<span class=\"countdown-block\"><span class=\"label\">%H</span> hr </span>'\n			    + '<span class=\"countdown-block\"><span class=\"label\">%M</span> min </span>'\n			    + '<span class=\"countdown-block\"><span class=\"label\">%S</span> sec</span>'));\n			});\n		}\n				\n	};\n	siteCountDown();\n\n	var siteDatePicker = function() {\n\n		if ( $('.datepicker').length > 0 ) {\n			$('.datepicker').datepicker();\n		}\n\n	};\n	siteDatePicker();\n\n	\n\n});";
